[pytest]
# Pytest configuration for AutomationExercise testing framework

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    smoke: Smoke tests - critical functionality
    regression: Regression tests - full functionality
    api: API tests
    ui: UI tests
    login: Login related tests
    signup: Signup related tests
    products: Product related tests
    cart: Cart related tests
    checkout: Checkout related tests
    contact: Contact form tests
    slow: Slow running tests
    fast: Fast running tests

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --capture=no
    --html=reports/report.html
    --self-contained-html
    --alluredir=reports/allure-results
    --junitxml=reports/junit.xml
    --maxfail=5
    --durations=10

# Parallel execution
# Use: pytest -n 4 (for 4 parallel workers)
# Requires: pip install pytest-xdist

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Minimum version
minversion = 6.0

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Log file configuration
log_file = logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test timeout (requires pytest-timeout)
timeout = 300

# Coverage configuration (requires pytest-cov)
# addopts = --cov=pages --cov=utils --cov-report=html:reports/coverage --cov-report=xml:reports/coverage.xml
