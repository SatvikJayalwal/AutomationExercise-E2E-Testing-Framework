{"name": "test_register_user[chrome]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b2e451e4ec01ccc0efebd22631575b81\")>\nuser_data = {'address1': 'Sector-47, Gurugram, Haryana, India', 'city': 'Gurugram', 'company': 'Satvik Solutions Pvt. Ltd.', 'country': 'India', ...}\n\n    def test_register_user(driver, user_data):\n        # Initialize HomePage object with the driver\n        home_page = HomePage(driver)\n    \n        # Verify the home page logo is visible to ensure the page loaded successfully\n        home_page.verify_home_page()\n    \n        # Click on the 'Signup / Login' button to navigate to the signup page\n        home_page.go_to_signup_login()\n    \n        # Initialize SignupLoginPage object\n        signup_page = SignupLoginPage(driver)\n    \n        # Verify the 'New User Signup!' form is visible\n        signup_page.verify_signup_form()\n    \n        # Enter the user's name and email into the signup form\n        signup_page.enter_signup_details(user_data['name'], user_data['email'])\n    \n        # Click the 'Signup' button to proceed to account creation\n        signup_page.click_signup()\n    \n        # Initialize AccountCreationPage object\n        account_creation_page = AccountCreationPage(driver)\n    \n        # Fill in all required account creation details using the user_data fixture\n        account_creation_page.fill_account_info(user_data)\n    \n        # Click 'Create Account' to submit the form\n        account_creation_page.create_account()\n    \n        # Initialize AccountPage object to verify account creation\n        account_page = AccountPage(driver)\n    \n        # Verify that 'ACCOUNT CREATED!' message is visible on the page\n>       account_page.verify_account_created()\n\ntests\\test_RegisterUser.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.account_page.AccountPage object at 0x000001B716B75FD0>\n\n    def verify_account_created(self):\n        element = self.find_element(self.account_created_text)\n>       assert \"ACCOUNT CREATED!\" in element.text\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\npages\\account_page.py:15: AssertionError"}, "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1755866864495, "stop": 1755866879106, "uuid": "54ba34a4-53a1-4454-b32d-0922cc0d6e02", "historyId": "3f488ec1ae302c802232d4bc4f387c12", "testCaseId": "7f555be545315d6fe3b4ca653c4b315c", "fullName": "tests.test_RegisterUser#test_register_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_RegisterUser"}, {"name": "host", "value": "ANONYMOUS"}, {"name": "thread", "value": "21664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_RegisterUser"}], "titlePath": ["tests", "test_RegisterUser.py"]}